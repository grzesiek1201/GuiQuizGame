import time
from threading import Thread, Condition


class Timers:
    def __init__(self):
        self.start_time = None
        self.paused_time = 0
        self.is_paused = False
        self.time_answer = 20
        self.time_up = False
        self.pause_condition = Condition()

    def stop_timer(self):
        if self.start_time is not None:
            return time.time() - self.start_time - self.paused_time
        else:
            return 0

    def start_timer(self):
        self.time_up = False
        self.timer_thread = Thread(target=self.player_timer)
        self.timer_thread.start()

    def player_timer(self):
        with self.pause_condition:
            for remaining_time in range(self.time_answer, 0, -1):
                if self.is_paused:
                    self.pause_condition.wait()
                time.sleep(1)
            print("\nTime's up! You didn't answer the question.")
            self.time_up = True

    def pause_timer(self):
        if not self.is_paused:
            self.paused_time = time.time()
            self.is_paused = True

    def resume_timer(self):
        if self.is_paused:
            self.start_time += time.time() - self.paused_time
            self.is_paused = False
            with self.pause_condition:
                self.pause_condition.notify()
